Name Spaces :-  
  -  Namespaces were introduced into C++ to resolve identifier name conflicts.
  -  This ensured that two objects can have the same name and yet be treated differently if they belonged to different namespaces. 
  
 Imp Points :- 
  -  it is never a good idea to use “void main()” or just “main()” as it doesn’t confirm standards. It may be allowed by some compilers        though.

C++ Data Types :-  
  - we can say that data types are used to tell the variables the type of data it can store.
  1.  Primitive Data Types :- 
        - Integer               :  int       : 4 Bytes        : -2147483648 to 2147483647 
        - Character             :  char      : 1 Byte         : -128 to 127 or 0 to 255
        - Boolean               :  bool      : 1 Byte              : true or false 
        - Floating Point        :  float     : 4 Bytes        : 
        - Double Floating Point :  double    : 8 Bytes        : 
        - Valueless or Void     :  void      :                : 
        - Wide Character        :  wchar_t  : 2 or 4 Bytes    : 
 
 2. Abstract or user defined data type :- 
        These data types are defined by user itself. Like, defining a class in C++ or a structure.
        
 - Datatype Modifiers :-  
      - As the name implies, datatype modifiers are used with the built-in data types to modify the length of data that a particular
        data type can hold. 
      - Data type modifiers available in C++ are:
            - Signed
            - Unsigned
            - Short
            - Long
       
 IMP :-  
    -  We have long long int :  8 Bytes  
    -  we have long double   :  12 Bytes   
    
 Basic Input / Output in C++ :- 
  - Input Stream :-  
        If the direction of flow of bytes is from device(for example: Keyboard) to the main memory then this process is
        called input.
  - Output Stream :-  
        If the direction of flow of bytes is opposite, i.e. from main memory to device( display screen ) then this process is called     
        output.
        
Header files available in C++ for Input – Output operation are :- 
  - iostream  
  - iomanip 
  - fstream 
  
 - Standard output stream (cout) :- 
    - The data needed to be displayed on the screen is inserted in the standard output stream (cout) using the insertion operator (<<).
        Ex:- 
            char sample[] = "GeeksforGeeks"; 
            cout << sample << " - A computer science portal for geeks";
   
 - standard input stream (cin) :-
    - The extraction operator(>>) is used along with the object cin for reading inputs.
        Ex:-  
             int age;  
             cin >> age;  
             
 - Un-buffered standard error stream (cerr) :- 
    - As cerr is un-buffered so it is used when we need to display the error message immediately. It does not have any buffer to store
      the error message and display later.
          Ex:- 
                cerr << "An error occured"; 
                
 - buffered standard error stream (clog) :- 
    - unlike cerr the error is first inserted into a buffer and is stored in the buffer until it is not fully filled. The error message
      will be displayed on the screen too. 
           Ex:- 
                clog << "An error occured";  

C/C++ Preprocessors :- 
  -  Preprocessor programs provides preprocessors directives which tell the compiler to preprocess the source code before compiling. 
  -  All of these preprocessor directive begins with a ‘#’ (hash) symbol. 
  
  There are 4 main types of preprocessor directives :- 
    - Macros :- 
        - Macros are piece of code in a program which is given some name. Whenever this name is encountered by the compiler the compiler
          replaces the name with the actual piece of code. The ‘#define’ directive is used to define a macro.
        - There is no semi-colon(‘;’) at the end of macro definition. Macro definitions do not need a semi-colon to end.
        
    - File Inclusion :- 
        - This type of preprocessor directive tells the compiler to include a file in the source code program. 
        - There are two types of files which can be included by the user in the program :- 
              - Header File or Standard files :- 
                    #include< file_name > 
              - user defined files :- 
                    #include"filename" 
                    
    - Conditional Compilation :- 
    - Other directives :- 
  
                
                
                
                
                
                
                
      
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        
        

